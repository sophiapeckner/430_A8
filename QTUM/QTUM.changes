----QUIT----2024-03-01T12:34:42.799915+01:00 Pharo10-SNAPSHOT-64bit-28169ae.image priorSource: 0!----QUIT----2024-03-01T12:35:12.44966+01:00 Pharo10-SNAPSHOT-64bit-28169ae.image priorSource: 0!Object subclass: #MyApp	instanceVariableNames: '' 	classVariableNames: ''	package: 'QTUM'!!MyApp commentStamp: 'SophiaPeckner 6/3/2025 22:48' prior: 0!Main equivalent to Java!Object subclass: #ExprC	instanceVariableNames: '' 	classVariableNames: ''	package: 'QTUM'!!ExprC commentStamp: 'SophiaPeckner 6/3/2025 22:49' prior: 0!ExprC for AST!ExprC subclass: #NumC	instanceVariableNames: 'n' 	classVariableNames: ''	package: 'QTUM'!!NumC commentStamp: 'SophiaPeckner 6/3/2025 22:50' prior: 0!NumC equivalent in asgn4!----QUIT----2025-06-03T22:50:20.158618-07:00 QTUM.image priorSource: 99!!MyApp methodsFor: 'as yet unclassified' stamp: 'MStavr 6/3/2025 23:04'!main: aExprC	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"		Transcript show: 'Hello World!!'.	(aExprC isKindOf: NumC)				ifTrue: [Transcript show: 'Hello World!!'.	]			! !!MyApp methodsFor: 'accessing' stamp: 'MStavr 6/3/2025 23:05' prior: 33555312!main: aExprC	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	Transcript show: 'Hello World!!'.	(aExprC isKindOf: NumC) ifTrue: [  ]! !!MyApp methodsFor: 'accessing' stamp: 'MStavr 6/3/2025 23:06' prior: 33555622!main: aExprC	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"		Transcript show: 'Hello World!!'.	(aExprC isKindOf: NumC)				ifTrue: [Transcript show: 'Hello World!!'.]			! !!MyApp methodsFor: 'accessing' stamp: 'MStavr 6/3/2025 23:06' prior: 33555893!main: aExprC	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"		Transcript show: 'Hello World!!'.	(aExprC isKindOf: NumC)				ifTrue: [Transcript show: 'Hello World!!'.]			! !!MyApp class methodsFor: 'as yet unclassified' stamp: 'MStavr 6/3/2025 23:08'!main: aExprC	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"		Transcript show: 'Hello World!!'.	(aExprC isKindOf: NumC)				ifTrue: [Transcript show: 'Hello World!!'.]		! !!MyApp class methodsFor: 'accessing' stamp: 'MStavr 6/3/2025 23:08' prior: 33556511!main: aExprC	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"	Transcript show: 'Hello World!!'.	(aExprC isKindOf: NumC) ifTrue: [  ]! !!NumC methodsFor: 'access' stamp: 'MStavr 6/4/2025 10:15'!n: aNumber	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					n:= aNumber! !!NumC methodsFor: 'as yet unclassified' stamp: 'MStavr 6/4/2025 10:17'!n	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					^n! !!MyApp methodsFor: 'accessing' stamp: 'MStavr 6/4/2025 10:20' prior: 33556202!main: aExprC	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"		Transcript show: 'Hello World!!'.	(aExprC isKindOf: NumC)				ifTrue: [Transcript show: aExprC n.]		! !----SNAPSHOT----2025-06-04T10:22:46.33-07:00 QTUM.image priorSource: 732!!MyApp class methodsFor: 'accessing' stamp: 'SophiaPeckner 6/4/2025 10:28' prior: 33556825!main: aExprC    "Prints a message and checks if the argument is an instance of NumC"    Transcript show: 'Hello World!!'; cr.    (aExprC isKindOf: NumC)        ifTrue: [            Transcript show: 'The argument is a NumC.'; cr.        ]        ifFalse: [            Transcript show: 'The argument is not a NumC.'; cr.        ].! !!MyApp class methodsFor: 'accessing' stamp: 'SophiaPeckner 6/4/2025 10:33' prior: 33557862!main: aExprC    "Prints the value if aExprC is a NumC"    (aExprC isKindOf: NumC)        ifTrue: [            Transcript show: 'The value is: ', aExprC n printString; cr.        ]        ifFalse: [            Transcript show: 'Not a NumC instance'; cr.        ].! !ExprC subclass: #StrC	instanceVariableNames: 's' 	classVariableNames: ''	package: 'QTUM'!!StrC commentStamp: 'SophiaPeckner 6/4/2025 10:36' prior: 0!StrC representation as in asgn4!ExprC subclass: #IdC	instanceVariableNames: 'name' 	classVariableNames: ''	package: 'QTUM'!!IdC commentStamp: 'SophiaPeckner 6/4/2025 10:37' prior: 0!IdC representation as in asgn4!!IdC methodsFor: 'as yet unclassified' stamp: 'SophiaPeckner 6/4/2025 10:38'!name	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					^name! !!IdC methodsFor: 'access' stamp: 'SophiaPeckner 6/4/2025 10:39'!name: aSymbol 	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					name:= aSymbol! !!StrC methodsFor: 'as yet unclassified' stamp: 'SophiaPeckner 6/4/2025 10:39'!s	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					^s! !!StrC methodsFor: 'accessing' stamp: 'SophiaPeckner 6/4/2025 10:40'!s: aString	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					s:=aString! !!MyApp class methodsFor: 'accessing' stamp: 'SophiaPeckner 6/4/2025 10:40'!interp: aExprC    "Prints the value if aExprC is a NumC"    (aExprC isKindOf: NumC)        ifTrue: [            Transcript show: 'The value is: ', aExprC n printString; cr.        ]        ifFalse: [            Transcript show: 'Not a NumC instance'; cr.        ].	(aExprC isKindOf: StrC)        ifTrue: [            Transcript show: 'The value is: ', aExprC s printString; cr.        ]        ifFalse: [            Transcript show: 'Not a NumC instance'; cr.        ].	(aExprC isKindOf: IdC)        ifTrue: [            Transcript show: 'The value is: ', aExprC name printString; cr.        ]        ifFalse: [            Transcript show: 'Not a NumC instance'; cr.        ].! !!MyApp class methodsFor: 'accessing' stamp: 'SophiaPeckner 6/4/2025 10:42' prior: 33559819!interp: aExprC    "Prints the value if aExprC is a NumC"    (aExprC isKindOf: NumC)        ifTrue: [            Transcript show: 'The value is: ', aExprC n printString; cr.        ].	(aExprC isKindOf: StrC)        ifTrue: [            Transcript show: 'The value is: ', aExprC s printString; cr.        ].	(aExprC isKindOf: IdC)        ifTrue: [            Transcript show: 'The value is: ', aExprC name printString; cr.        ].! !MyApp class removeSelector: #main:!MyApp removeSelector: #main:!----SNAPSHOT----2025-06-04T10:50:10.717739-07:00 QTUM.image priorSource: 3262!Object subclass: #Value	instanceVariableNames: '' 	classVariableNames: ''	package: 'QTUM'!!Value commentStamp: 'MStavr 6/4/2025 10:54' prior: 0!Represents values as in a4.More or less a wrapper for all the subclasses!Value subclass: #NumV	instanceVariableNames: '' 	classVariableNames: ''	package: 'QTUM'!!NumV commentStamp: 'MStavr 6/4/2025 10:55' prior: 0!Numbers as in a4, but this time as a value!Value subclass: #NumV	instanceVariableNames: 'n'	classVariableNames: ''	package: 'QTUM'!Value subclass: #BoolV	instanceVariableNames: 'val' 	classVariableNames: ''	package: 'QTUM'!!BoolV commentStamp: 'MStavr 6/4/2025 10:57' prior: 0!Represents bolleans as in A4will only ever hold true/false!Value subclass: #StrV	instanceVariableNames: 's' 	classVariableNames: ''	package: 'QTUM'!!StrV commentStamp: 'MStavr 6/4/2025 10:57' prior: 0!Represents StrVs as in A4holds the string as a value!!StrV methodsFor: 'instantiate' stamp: 'MStavr 6/4/2025 10:59'!new: aString	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					s:= aString.! !!StrV methodsFor: 'instantiate' stamp: 'MStavr 6/4/2025 12:12'!s: aString	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					s:= aString.! !StrV removeSelector: #new:!!StrV methodsFor: 'as yet unclassified' stamp: 'MStavr 6/4/2025 12:13'!s	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					^s! !!NumV methodsFor: 'as yet unclassified' stamp: 'MStavr 6/4/2025 12:15'!n	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					^n! !!NumV methodsFor: 'accessing' stamp: 'MStavr 6/4/2025 12:15'!n: aNumber	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					n:= aNumber! !!MyApp class methodsFor: 'accessing' stamp: 'MStavr 6/4/2025 12:27' prior: 33560616!interp: aExprC    "Interps the ExprC"    (aExprC isKindOf: NumC)        ifTrue: [            |value|				value := NumV new.				value n: aExprC n.				Transcript show: value n; cr. 				^value				        ].	(aExprC isKindOf: StrC)        ifTrue: [            Transcript show: 'The value is: ', aExprC s printString; cr.        ].	(aExprC isKindOf: IdC)        ifTrue: [            Transcript show: 'The value is: ', aExprC name printString; cr.        ].! !!MyApp class methodsFor: 'accessing' stamp: 'MStavr 6/4/2025 12:41' prior: 33563219!interp: aExprC    "Interps the ExprC"    (aExprC isKindOf: NumC)        ifTrue: [            |value|				value := NumV new.				value n: aExprC n. 				^value        ].	(aExprC isKindOf: StrC)        ifTrue: [            |value|				value := StrV new.				value n: aExprC s.				^value        ].	(aExprC isKindOf: IdC)        ifTrue: [            Transcript show: 'The value is: ', aExprC name printString; cr.        ].! !!MyApp class methodsFor: 'accessing' stamp: 'MStavr 6/4/2025 12:48' prior: 33563777!interp: aExprC    "Interps the ExprC"    (aExprC isKindOf: NumC)        ifTrue: [            |value|				value := NumV new.				value n: aExprC n. 				^value        ].	(aExprC isKindOf: StrC)        ifTrue: [            |value|				value := StrV new.				value s: aExprC s.				^value        ].	(aExprC isKindOf: IdC)        ifTrue: [            Transcript show: 'The value is: ', aExprC name printString; cr.        ].! !!MyApp class methodsFor: 'accessing' stamp: 'MStavr 6/4/2025 13:05' prior: 33564300!interp: aExprC    "Interps the ExprC"    (aExprC isKindOf: NumC)        ifTrue: [            |value|				value := NumV new.				value n: aExprC n. 				^value        ].	(aExprC isKindOf: StrC)        ifTrue: [            |value|				value := StrV new.				value s: aExprC s.				^value        ].	(aExprC isKindOf: IdC)        ifTrue: [				"Create some lookup function"				"Prolly just put it in this part of the function"            |varName|				varName := aExprC name.				        ].! !Value subclass: #PrimV	instanceVariableNames: '' 	classVariableNames: ''	package: 'QTUM'!!PrimV commentStamp: 'MStavr 6/4/2025 21:03' prior: 0!vlaue primv for  prim operations!Value subclass: #PrimV	instanceVariableNames: 'op'	classVariableNames: ''	package: 'QTUM'!!MyApp class methodsFor: 'accessing' stamp: 'MStavr 6/4/2025 21:05'!interp: aExprC env: anEnvironment    "Interps the ExprC"    (aExprC isKindOf: NumC)        ifTrue: [            |value|				value := NumV new.				value n: aExprC n. 				^value        ].	(aExprC isKindOf: StrC)        ifTrue: [            |value|				value := StrV new.				value s: aExprC s.				^value        ].	(aExprC isKindOf: IdC)        ifTrue: [				"Create some lookup function"				"Prolly just put it in this part of the function"            |varName|				varName := aExprC name.				anEnvironment keysDo: 				[ :key | 				]				        ].! !----SNAPSHOT----2025-06-04T21:05:43.746-07:00 QTUM.image priorSource: 6699!