----QUIT----2024-03-01T12:34:42.799915+01:00 Pharo10-SNAPSHOT-64bit-28169ae.image priorSource: 0!----QUIT----2024-03-01T12:35:12.44966+01:00 Pharo10-SNAPSHOT-64bit-28169ae.image priorSource: 0!----QUIT/NOSAVE----2025-06-02T10:22:00.866-07:00 Pharo image (stable).image priorSource: 99!!PharoSyntaxTutorial methodsFor: 'interactive' stamp: 'mstavr 6/2/2025 10:52' prior: 53163564!divideTwoByZero	"Oops!! 2/0 raises a ZeroDivide exception. So the debugger opens to let you fix the code.	- Remove the line of code above.	- Right-click and select 'Accept' to compile the new version of the method	- click the button 'Proceed' to continue execution."	ProfStef next.! !Object subclass: #ExprC	instanceVariableNames: '' 	classVariableNames: ''	package: 'Kernel-Objects'!Object subclass: #StrC	instanceVariableNames: 's' 	classVariableNames: ''	package: 'Kernel-Objects'!!StrC commentStamp: 'mstavr 6/2/2025 13:19' prior: 0!Usage of a StrC as in asgn4Contains a String: s!!StrC methodsFor: 'interp-ing' stamp: 'mstavr 6/2/2025 13:26'!interp	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					s! !!StrC methodsFor: 'interp-ing' stamp: 'mstavr 6/2/2025 13:27' prior: 33555491!interp	"returns the strring causght in the StrC"	"scope: class-variables  &  instance-variables"					s! !!ExprC commentStamp: 'mstavr 6/2/2025 13:31' prior: 0!Used to catch all versions of exprCs that make up an ASTReminder that the EBNF for an ExprC looks like the following in asgn4‹expr›::= ‹num›  | 		 ‹id›  |  		 ‹string›  |  		 { if ‹expr› ‹expr› ‹expr› }  |  	    { with ‹clause›* ‹expr› }  | 		 { ‹id›* => ‹expr› }  |     	 { ‹expr› ‹expr›* }‹clause› ::= [ ‹id› = ‹expr› ]Each resulting part of a tree (numC, StrC, IfC, etc. will need it's own set of methods to be interpreted. !ExprC subclass: #StrC	instanceVariableNames: 's'	classVariableNames: ''	package: 'Kernel-Objects'!ExprC subclass: #NumC	instanceVariableNames: 'n' 	classVariableNames: ''	package: 'Kernel-Objects'!!NumC commentStamp: 'mstavr 6/2/2025 13:35' prior: 0!Usage of a NumC as in asgn4Contains a Number: n!!NumC methodsFor: 'as yet unclassified' stamp: 'mstavr 6/2/2025 13:36'!interp	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"					^n! !!StrC methodsFor: 'interp-ing' stamp: 'mstavr 6/2/2025 13:38' prior: 33555688!interp	"returns the string causght in the StrC"	"scope: class-variables  &  instance-variables"					^s! !!NumC methodsFor: 'interp-ing' stamp: 'mstavr 6/2/2025 13:38' prior: 33556744!interp	"returns the number causght in the NumC"	"scope: class-variables  &  instance-variables"					^n! !ExprC subclass: #IdC	instanceVariableNames: 'name' 	classVariableNames: ''	package: 'Kernel-Objects'!!IdC commentStamp: 'mstavr 6/2/2025 13:39' prior: 0!Used to contain the variable names that will be used throughout a functionStored as Symbols!Object subclass: #Environment	instanceVariableNames: '' 	classVariableNames: ''	package: 'Kernel-Objects'!!Environment commentStamp: 'mstavr 6/2/2025 13:42' prior: 0!Used to contain a list of BindingsItself does not hold any instance variables!Environment subclass: #Binding	instanceVariableNames: 'name value' 	classVariableNames: ''	package: 'Kernel-Objects'!!Binding commentStamp: 'mstavr 6/2/2025 13:44' prior: 0!Associates the names of variables to their valuesStored on the inside of an environmentname : Symbolvalue : Value!Object subclass: #Environment	instanceVariableNames: 'ls'	classVariableNames: ''	package: 'Kernel-Objects'!!Environment commentStamp: 'mstavr 6/2/2025 13:45' prior: 33557667!Used to contain a list of BindingsOnly instance variable should be the list itself of Bindings!!IdC methodsFor: 'as yet unclassified' stamp: 'mstavr 6/2/2025 13:55'!interp	"comment stating purpose of instance-side method"	"scope: class-variables  &  instance-variables"			! !----QUIT----2025-06-02T14:00:08.523-07:00 Pharo image (stable).image priorSource: 99!